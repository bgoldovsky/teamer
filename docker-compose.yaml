version: "3.5"

volumes:
  database_data:
    driver: local

services:

  # databases and infrastructure

  db:
    image: postgres:latest
    ports:
      - "5433:5432"
    volumes:
      - database_data:/var/lib/postgresql/data
    logging:
      driver: none

  cache:
    image: redis:latest
    ports:
      - "6379:6379"
    logging:
      driver: none

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    logging:
      driver: none

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "teams:1:1,persons:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
    logging:
      driver: none

  # services

  service-dutyer:
    image: service-dutyer
    build: service-dutyer
    ports:
      - "50051:50051"
    environment:
      - PORT=50051
      - CONNECTION_STRING=host=db port=5432 user=postgres password=postgres dbname=service_dutyer sslmode=disable
      - KAFKA=kafka:9092
      - CRON=0 0/10 * * * ?
    depends_on:
      - db
      - kafka
    restart: on-failure:10

  service-slack-bot:
    image: service-slack-bot
    build: ./service-slack-bot
    environment:
      - KAFKA=kafka:9092
    depends_on:
      - kafka
    restart: on-failure:10

  gateway-api:
    image: gateway-api
    build: ./gateway-api
    ports:
      - "8088:8080"
    environment:
      - PORT=8080
      - REDIS=cache:6379
      - SECRET=mySecretSigningString
      - SERVICE_DUTYER=service-dutyer:50051
    depends_on:
      - service-dutyer
      - cache
    links:
      - "service-dutyer"
    restart: on-failure:10

  auth-api:
    image: auth-api
    build: ./auth-api
    ports:
      - "8085:8080"
    environment:
      - PORT=8080
      - SECRET=mySecretSigningString
    restart: on-failure:5

