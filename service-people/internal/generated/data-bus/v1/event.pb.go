// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data-bus/proto/event.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventMessage struct {
	MessageID            []byte     `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Data                 *EventData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EventMessage) Reset()         { *m = EventMessage{} }
func (m *EventMessage) String() string { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()    {}
func (*EventMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d534adcd832c387, []int{0}
}

func (m *EventMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMessage.Unmarshal(m, b)
}
func (m *EventMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMessage.Marshal(b, m, deterministic)
}
func (m *EventMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMessage.Merge(m, src)
}
func (m *EventMessage) XXX_Size() int {
	return xxx_messageInfo_EventMessage.Size(m)
}
func (m *EventMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EventMessage proto.InternalMessageInfo

func (m *EventMessage) GetMessageID() []byte {
	if m != nil {
		return m.MessageID
	}
	return nil
}

func (m *EventMessage) GetData() *EventData {
	if m != nil {
		return m.Data
	}
	return nil
}

type EventData struct {
	Event                string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	EntityID             int64    `protobuf:"varint,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
	OccurredOn           int64    `protobuf:"varint,3,opt,name=occurredOn,proto3" json:"occurredOn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventData) Reset()         { *m = EventData{} }
func (m *EventData) String() string { return proto.CompactTextString(m) }
func (*EventData) ProtoMessage()    {}
func (*EventData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d534adcd832c387, []int{1}
}

func (m *EventData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventData.Unmarshal(m, b)
}
func (m *EventData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventData.Marshal(b, m, deterministic)
}
func (m *EventData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventData.Merge(m, src)
}
func (m *EventData) XXX_Size() int {
	return xxx_messageInfo_EventData.Size(m)
}
func (m *EventData) XXX_DiscardUnknown() {
	xxx_messageInfo_EventData.DiscardUnknown(m)
}

var xxx_messageInfo_EventData proto.InternalMessageInfo

func (m *EventData) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *EventData) GetEntityID() int64 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

func (m *EventData) GetOccurredOn() int64 {
	if m != nil {
		return m.OccurredOn
	}
	return 0
}

func init() {
	proto.RegisterType((*EventMessage)(nil), "data_bus.EventMessage")
	proto.RegisterType((*EventData)(nil), "data_bus.EventData")
}

func init() { proto.RegisterFile("data-bus/proto/event.proto", fileDescriptor_2d534adcd832c387) }

var fileDescriptor_2d534adcd832c387 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x4d, 0x2a, 0x2d, 0xd6, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x2d, 0x4b, 0xcd, 0x2b,
	0xd1, 0x03, 0xb3, 0x85, 0x38, 0x40, 0x72, 0xf1, 0x49, 0xa5, 0xc5, 0x4a, 0xa1, 0x5c, 0x3c, 0xae,
	0x20, 0x09, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x21, 0x19, 0x2e, 0xce, 0x5c, 0x08, 0xd3,
	0xd3, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x27, 0x08, 0x21, 0x20, 0xa4, 0xce, 0xc5, 0x02, 0xd2,
	0x29, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xac, 0x07, 0x33, 0x46, 0x0f, 0x6c, 0x86, 0x4b,
	0x62, 0x49, 0x62, 0x10, 0x58, 0x81, 0x52, 0x2c, 0x17, 0x27, 0x5c, 0x48, 0x48, 0x84, 0x8b, 0x15,
	0x6c, 0x39, 0xd8, 0x3c, 0xce, 0x20, 0x08, 0x47, 0x48, 0x8a, 0x8b, 0x23, 0x35, 0xaf, 0x24, 0xb3,
	0xa4, 0xd2, 0xd3, 0x05, 0x6c, 0x1e, 0x73, 0x10, 0x9c, 0x2f, 0x24, 0xc7, 0xc5, 0x95, 0x9f, 0x9c,
	0x5c, 0x5a, 0x54, 0x94, 0x9a, 0xe2, 0x9f, 0x27, 0xc1, 0x0c, 0x96, 0x45, 0x12, 0x71, 0x52, 0x88,
	0x92, 0xcb, 0xcc, 0x2b, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x4f, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a,
	0x2c, 0x49, 0x4d, 0xd1, 0x87, 0x7b, 0xb8, 0xcc, 0x30, 0x89, 0x0d, 0xec, 0x51, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7c, 0x38, 0x7b, 0xf9, 0x06, 0x01, 0x00, 0x00,
}
