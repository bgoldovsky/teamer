// Code generated by MockGen. DO NOT EDIT.
// Source: bot.go

// Package mock_bot is a generated GoMock package.
package mock_bot

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSlackBot is a mock of SlackBot interface
type MockSlackBot struct {
	ctrl     *gomock.Controller
	recorder *MockSlackBotMockRecorder
}

// MockSlackBotMockRecorder is the mock recorder for MockSlackBot
type MockSlackBotMockRecorder struct {
	mock *MockSlackBot
}

// NewMockSlackBot creates a new mock instance
func NewMockSlackBot(ctrl *gomock.Controller) *MockSlackBot {
	mock := &MockSlackBot{ctrl: ctrl}
	mock.recorder = &MockSlackBotMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSlackBot) EXPECT() *MockSlackBotMockRecorder {
	return m.recorder
}

// ChangeTopic mocks base method
func (m *MockSlackBot) ChangeTopic(ctx context.Context, slack, channel string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeTopic", ctx, slack, channel)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeTopic indicates an expected call of ChangeTopic
func (mr *MockSlackBotMockRecorder) ChangeTopic(ctx, slack, channel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeTopic", reflect.TypeOf((*MockSlackBot)(nil).ChangeTopic), ctx, slack, channel)
}
